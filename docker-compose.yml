version: '3.8'

services:
  upbit-mcp-server:
    image: python:3.10-slim # 파이썬 공식 슬림 이미지를 기반으로 합니다.
    container_name: upbit_mcp_server
    restart: unless-stopped
    working_dir: /app      # 컨테이너 내 작업 디렉토리를 /app으로 설정합니다.
    env_file:
      - .env              # 호스트의 .env 파일에서 환경 변수를 로드합니다.
    ports:
      - "8001:8001"       # 호스트의 8001 포트를 컨테이너의 8001 포트에 매핑합니다.
    volumes:
      - .:/app            # 현재 디렉토리(Upbit MCP 서버 프로젝트 전체)를 컨테이너의 /app 디렉토리에 마운트합니다.
    networks:
      - nginx-n8n-net     # 기존 n8n과 동일한 네트워크에 연결합니다.
    command: >
      sh -c "
        echo 'Updating package lists and installing curl...' &&
        apt-get update && apt-get install -y curl && \
        apt-get clean && rm -rf /var/lib/apt/lists/* && \
        echo 'Installing uv...' &&
        curl -Ls https://astral.sh/uv/install.sh | sh && \
        export PATH="/root/.local/bin:$PATH" && \
        echo 'Syncing dependencies with uv...' &&
        /root/.local/bin/uv sync && \
        echo 'Starting Upbit MCP server using uv...' &&
        /root/.local/bin/uv run python main.py
      "

networks:
  nginx-n8n-net:
    external: true # 이 네트워크는 이미 외부에서 생성되어 있다고 가정합니다 (n8n docker-compose 등).